// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Event = Event || {};

/**
 * @constructor
 */
Event.PlayerAccelerated = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Event.PlayerAccelerated}
 */
Event.PlayerAccelerated.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Event.PlayerAccelerated=} obj
 * @returns {Event.PlayerAccelerated}
 */
Event.PlayerAccelerated.getRootAsPlayerAccelerated = function(bb, obj) {
  return (obj || new Event.PlayerAccelerated).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
Event.PlayerAccelerated.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('PLAC');
};

/**
 * @returns {number}
 */
Event.PlayerAccelerated.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Event.PlayerAccelerated.prototype.mutate_id = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Event.PlayerAccelerated.prototype.x = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Event.PlayerAccelerated.prototype.mutate_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Event.PlayerAccelerated.prototype.y = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Event.PlayerAccelerated.prototype.mutate_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Event.PlayerAccelerated.prototype.rotation = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Event.PlayerAccelerated.prototype.mutate_rotation = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
Event.PlayerAccelerated.prototype.velocity = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Event.PlayerAccelerated.prototype.mutate_velocity = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Event.PlayerAccelerated.startPlayerAccelerated = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
Event.PlayerAccelerated.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 */
Event.PlayerAccelerated.addX = function(builder, x) {
  builder.addFieldFloat32(1, x, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} y
 */
Event.PlayerAccelerated.addY = function(builder, y) {
  builder.addFieldFloat32(2, y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rotation
 */
Event.PlayerAccelerated.addRotation = function(builder, rotation) {
  builder.addFieldFloat32(3, rotation, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} velocity
 */
Event.PlayerAccelerated.addVelocity = function(builder, velocity) {
  builder.addFieldFloat32(4, velocity, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Event.PlayerAccelerated.endPlayerAccelerated = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Event.PlayerAccelerated.finishPlayerAcceleratedBuffer = function(builder, offset) {
  builder.finish(offset, 'PLAC');
};

// Exports for Node.js and RequireJS
this.Event = Event;
