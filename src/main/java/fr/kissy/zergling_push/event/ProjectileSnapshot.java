// automatically generated by the FlatBuffers compiler, do not modify

package fr.kissy.zergling_push.event;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ProjectileSnapshot extends Table {
  public static ProjectileSnapshot getRootAsProjectileSnapshot(ByteBuffer _bb) { return getRootAsProjectileSnapshot(_bb, new ProjectileSnapshot()); }
  public static ProjectileSnapshot getRootAsProjectileSnapshot(ByteBuffer _bb, ProjectileSnapshot obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean ProjectileSnapshotBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "PJSP"); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ProjectileSnapshot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public float x() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float y() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float rotation() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public long time() { int o = __offset(12); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createProjectileSnapshot(FlatBufferBuilder builder,
      int idOffset,
      float x,
      float y,
      float rotation,
      long time) {
    builder.startObject(5);
    ProjectileSnapshot.addTime(builder, time);
    ProjectileSnapshot.addRotation(builder, rotation);
    ProjectileSnapshot.addY(builder, y);
    ProjectileSnapshot.addX(builder, x);
    ProjectileSnapshot.addId(builder, idOffset);
    return ProjectileSnapshot.endProjectileSnapshot(builder);
  }

  public static void startProjectileSnapshot(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addX(FlatBufferBuilder builder, float x) { builder.addFloat(1, x, 0.0f); }
  public static void addY(FlatBufferBuilder builder, float y) { builder.addFloat(2, y, 0.0f); }
  public static void addRotation(FlatBufferBuilder builder, float rotation) { builder.addFloat(3, rotation, 0.0f); }
  public static void addTime(FlatBufferBuilder builder, long time) { builder.addInt(4, (int)time, (int)0L); }
  public static int endProjectileSnapshot(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishProjectileSnapshotBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "PJSP"); }
}

