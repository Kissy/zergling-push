// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var fr = fr || {};

/**
 * @const
 * @namespace
 */
fr.kissy = fr.kissy || {};

/**
 * @const
 * @namespace
 */
fr.kissy.zergling_push = fr.kissy.zergling_push || {};

/**
 * @const
 * @namespace
 */
fr.kissy.zergling_push.event = fr.kissy.zergling_push.event || {};

/**
 * @constructor
 */
fr.kissy.zergling_push.event.PlayerConnected = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fr.kissy.zergling_push.event.PlayerConnected}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {fr.kissy.zergling_push.event.PlayerConnected=} obj
 * @returns {fr.kissy.zergling_push.event.PlayerConnected}
 */
fr.kissy.zergling_push.event.PlayerConnected.getRootAsPlayerConnected = function(bb, obj) {
  return (obj || new fr.kissy.zergling_push.event.PlayerConnected).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
fr.kissy.zergling_push.event.PlayerConnected.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('PLCN');
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.startingXPosition = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.startingYPosition = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.startingRotation = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.velocityFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.angularVelocityFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.decelerationFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
fr.kissy.zergling_push.event.PlayerConnected.prototype.laserVelocityFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
fr.kissy.zergling_push.event.PlayerConnected.startPlayerConnected = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
fr.kissy.zergling_push.event.PlayerConnected.addId = function(builder, idOffset) {
  builder.addFieldOffset(0, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
fr.kissy.zergling_push.event.PlayerConnected.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} startingXPosition
 */
fr.kissy.zergling_push.event.PlayerConnected.addStartingXPosition = function(builder, startingXPosition) {
  builder.addFieldFloat32(2, startingXPosition, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} startingYPosition
 */
fr.kissy.zergling_push.event.PlayerConnected.addStartingYPosition = function(builder, startingYPosition) {
  builder.addFieldFloat32(3, startingYPosition, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} startingRotation
 */
fr.kissy.zergling_push.event.PlayerConnected.addStartingRotation = function(builder, startingRotation) {
  builder.addFieldFloat32(4, startingRotation, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} velocityFactor
 */
fr.kissy.zergling_push.event.PlayerConnected.addVelocityFactor = function(builder, velocityFactor) {
  builder.addFieldFloat32(5, velocityFactor, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} angularVelocityFactor
 */
fr.kissy.zergling_push.event.PlayerConnected.addAngularVelocityFactor = function(builder, angularVelocityFactor) {
  builder.addFieldFloat32(6, angularVelocityFactor, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} decelerationFactor
 */
fr.kissy.zergling_push.event.PlayerConnected.addDecelerationFactor = function(builder, decelerationFactor) {
  builder.addFieldFloat32(7, decelerationFactor, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} laserVelocityFactor
 */
fr.kissy.zergling_push.event.PlayerConnected.addLaserVelocityFactor = function(builder, laserVelocityFactor) {
  builder.addFieldFloat32(8, laserVelocityFactor, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
fr.kissy.zergling_push.event.PlayerConnected.endPlayerConnected = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
fr.kissy.zergling_push.event.PlayerConnected.finishPlayerConnectedBuffer = function(builder, offset) {
  builder.finish(offset, 'PLCN');
};

// Exports for Node.js and RequireJS
this.fr = fr;
